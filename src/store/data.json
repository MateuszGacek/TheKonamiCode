[
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13503",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13503/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13503/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13503/events",
    "html_url": "https://github.com/elixir-lang/elixir/pull/13503",
    "id": 2254481301,
    "node_id": "PR_kwDOABLXGs5tPsxz",
    "number": 13503,
    "title": "Test: Reproduces a compilation error caused by the formatter",
    "user": {
      "login": "amalbuquerque",
      "id": 557562,
      "node_id": "MDQ6VXNlcjU1NzU2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/557562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amalbuquerque",
      "html_url": "https://github.com/amalbuquerque",
      "followers_url": "https://api.github.com/users/amalbuquerque/followers",
      "following_url": "https://api.github.com/users/amalbuquerque/following{/other_user}",
      "gists_url": "https://api.github.com/users/amalbuquerque/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amalbuquerque/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amalbuquerque/subscriptions",
      "organizations_url": "https://api.github.com/users/amalbuquerque/orgs",
      "repos_url": "https://api.github.com/users/amalbuquerque/repos",
      "events_url": "https://api.github.com/users/amalbuquerque/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amalbuquerque/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-04-20T09:59:52Z",
    "updated_at": "2024-04-20T20:32:08Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/pulls/13503",
      "html_url": "https://github.com/elixir-lang/elixir/pull/13503",
      "diff_url": "https://github.com/elixir-lang/elixir/pull/13503.diff",
      "patch_url": "https://github.com/elixir-lang/elixir/pull/13503.patch",
      "merged_at": null
    },
    "body": "The formatter removes the parens and they're needed because of the keyword list argument with the guard clause. Without parens the compilation fails.\r\n\r\nThis is valid code (note the needed function parens (`(input: x)` due to the keyword list arg):\r\n\r\n```elixir\r\nfn (input: x) when is_integer(x) ->\r\n  x + 42\r\nend\r\n```\r\n\r\nIt becomes this after being formatted:\r\n\r\n```elixir\r\nfn input: x when is_integer(x) ->\r\n  x + 42\r\nend\r\n```\r\n\r\nAnd consequently the compilation fails with:\r\n\r\n```bash\r\n    error: undefined function when/2 (there is no such import)\r\n    │\r\n  1 │ fn input: x when is_integer(x) ->\r\n    │             ^\r\n    │\r\n    └─ formatter_error.exs:1:13\r\n\r\n** (CompileError) formatter_error.exs: cannot compile file (errors have been logged)\r\n    (elixir 1.16.2) src/elixir_fn.erl:17: anonymous fn/4 in :elixir_fn.expand/4\r\n```\r\n\r\nI've looked at the `code/formatter.ex` to understand what's happening but I'm not yet sure what's causing this :sweat_smile:\r\n\r\nCheers!",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13503/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13502",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13502/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13502/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13502/events",
    "html_url": "https://github.com/elixir-lang/elixir/pull/13502",
    "id": 2253662908,
    "node_id": "PR_kwDOABLXGs5tNTJa",
    "number": 13502,
    "title": "Correct task remote vs. local documentation",
    "user": {
      "login": "tjchambers",
      "id": 103654,
      "node_id": "MDQ6VXNlcjEwMzY1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/103654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjchambers",
      "html_url": "https://github.com/tjchambers",
      "followers_url": "https://api.github.com/users/tjchambers/followers",
      "following_url": "https://api.github.com/users/tjchambers/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjchambers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjchambers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjchambers/subscriptions",
      "organizations_url": "https://api.github.com/users/tjchambers/orgs",
      "repos_url": "https://api.github.com/users/tjchambers/repos",
      "events_url": "https://api.github.com/users/tjchambers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjchambers/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-04-19T18:38:19Z",
    "updated_at": "2024-04-20T19:58:02Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/pulls/13502",
      "html_url": "https://github.com/elixir-lang/elixir/pull/13502",
      "diff_url": "https://github.com/elixir-lang/elixir/pull/13502.diff",
      "patch_url": "https://github.com/elixir-lang/elixir/pull/13502.patch",
      "merged_at": null
    },
    "body": "The listed examples had the headings reversed. This is a documentation only change.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13502/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13465",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13465/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13465/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13465/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/13465",
    "id": 2221630181,
    "node_id": "I_kwDOABLXGs6Ea2Ll",
    "number": 13465,
    "title": "Better error message for undefined variables within remote calls to macro's missing a corresponding `require`",
    "user": {
      "login": "zachdaniel",
      "id": 5722339,
      "node_id": "MDQ6VXNlcjU3MjIzMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5722339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zachdaniel",
      "html_url": "https://github.com/zachdaniel",
      "followers_url": "https://api.github.com/users/zachdaniel/followers",
      "following_url": "https://api.github.com/users/zachdaniel/following{/other_user}",
      "gists_url": "https://api.github.com/users/zachdaniel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zachdaniel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zachdaniel/subscriptions",
      "organizations_url": "https://api.github.com/users/zachdaniel/orgs",
      "repos_url": "https://api.github.com/users/zachdaniel/repos",
      "events_url": "https://api.github.com/users/zachdaniel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zachdaniel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 4930795,
        "node_id": "MDU6TGFiZWw0OTMwNzk1",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement",
        "name": "Kind:Enhancement",
        "color": "009800",
        "default": false,
        "description": null
      },
      {
        "id": 17739153,
        "node_id": "MDU6TGFiZWwxNzczOTE1Mw==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir",
        "name": "App:Elixir",
        "color": "CCCCCC",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-04-02T23:44:39Z",
    "updated_at": "2024-04-03T07:12:28Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### Current behavior\r\n\r\nWhen calling macros like `Ecto.Query`, you often end up with an error message that can be cryptic, especially with beginners. \r\n\r\nFor example, the following code *without* adding `require Ecto.Query`.\r\n\r\n```elixir\r\nEcto.Query.from row in Table, where: row.name == \"fred\"\r\n```\r\n\r\nwill produce `error: undefined variable \"row\"`\r\n\r\nThis should be an error, but I think that a hint here would go a long way towards helping users understand what needs to happen.\r\n\r\n### Desired behavior\r\n\r\nIn this situation, the compiler should check to see if it is within a remote call to a macro that has not been required, and if so provide a helpful message to the user, something along the lines of:\r\n\r\n`perhaps you are missing require Ecto.Query?`",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13465/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13452",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13452/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13452/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13452/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/13452",
    "id": 2215941668,
    "node_id": "I_kwDOABLXGs6EFJYk",
    "number": 13452,
    "title": "Compilation warning location \"drift\"",
    "user": {
      "login": "krainboltgreene",
      "id": 334809,
      "node_id": "MDQ6VXNlcjMzNDgwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/334809?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krainboltgreene",
      "html_url": "https://github.com/krainboltgreene",
      "followers_url": "https://api.github.com/users/krainboltgreene/followers",
      "following_url": "https://api.github.com/users/krainboltgreene/following{/other_user}",
      "gists_url": "https://api.github.com/users/krainboltgreene/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krainboltgreene/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krainboltgreene/subscriptions",
      "organizations_url": "https://api.github.com/users/krainboltgreene/orgs",
      "repos_url": "https://api.github.com/users/krainboltgreene/repos",
      "events_url": "https://api.github.com/users/krainboltgreene/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krainboltgreene/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 484973577,
        "node_id": "MDU6TGFiZWw0ODQ5NzM1Nzc=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Note:Needs%20more%20info",
        "name": "Note:Needs more info",
        "color": "d93f0b",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2024-03-29T20:05:56Z",
    "updated_at": "2024-04-01T10:18:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### Elixir and Erlang/OTP versions\n\nErlang/OTP 26 [erts-14.2.2] [source] [64-bit] [smp:10:10] [ds:10:10:10] [async-threads:1] [jit]\r\n\r\nElixir 1.16.2 (compiled with Erlang/OTP 26)\n\n### Operating system\n\nmacOS 13.6.3 22G436\n\n### Current behavior\n\nSo I started noticing in this library that the \"line of error\" started to \"drift\" as I made changes to the code. Below you can see that for some reason it's pointing to a `@doc` for an unrelated function rather than the conflicting function. Anything you need for this I can provide.\r\n\r\n```\r\n12:52:52.547 [error] Exqlite.Connection (#PID<0.251.0>) failed to connect: ** (Exqlite.Error) database is locked\r\n    error: def create_sample!/3 defaults conflicts with create_sample!/2\r\n    │\r\n 30 │       preloaded relationships.\r\n    │       ^^^^^^^^^^^^^^^^^^^^^^^^\r\n    │\r\n    └─ lib/ecto_interface/write/create.ex:30: EctoInterfaceTest.SampleShorthandContext.create_sample!/3\r\n\r\n\r\n== Compilation error in file test/ecto_interface_test.exs ==\r\n** (CompileError) lib/ecto_interface/write/create.ex: cannot compile module EctoInterfaceTest.SampleShorthandContext (errors have been logged)\r\n    test/ecto_interface_test.exs:30: (module)\r\n    test/ecto_interface_test.exs:29: (module)\r\n    (elixir 1.16.2) lib/kernel/parallel_compiler.ex:540: Kernel.ParallelCompiler.require_file/2\r\n    (elixir 1.16.2) lib/kernel/parallel_compiler.ex:430: anonymous fn/5 in Kernel.ParallelCompiler.spawn_workers/8\r\n```\n\n### Expected behavior\n\nPoint to the right macro line.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13452/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13448",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13448/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13448/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13448/events",
    "html_url": "https://github.com/elixir-lang/elixir/pull/13448",
    "id": 2210998220,
    "node_id": "PR_kwDOABLXGs5q8ENj",
    "number": 13448,
    "title": "Add support for sigils containing integers",
    "user": {
      "login": "starbelly",
      "id": 39971740,
      "node_id": "MDQ6VXNlcjM5OTcxNzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/39971740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/starbelly",
      "html_url": "https://github.com/starbelly",
      "followers_url": "https://api.github.com/users/starbelly/followers",
      "following_url": "https://api.github.com/users/starbelly/following{/other_user}",
      "gists_url": "https://api.github.com/users/starbelly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/starbelly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/starbelly/subscriptions",
      "organizations_url": "https://api.github.com/users/starbelly/orgs",
      "repos_url": "https://api.github.com/users/starbelly/repos",
      "events_url": "https://api.github.com/users/starbelly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/starbelly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2024-03-27T14:44:00Z",
    "updated_at": "2024-03-31T19:00:06Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/pulls/13448",
      "html_url": "https://github.com/elixir-lang/elixir/pull/13448",
      "diff_url": "https://github.com/elixir-lang/elixir/pull/13448.diff",
      "patch_url": "https://github.com/elixir-lang/elixir/pull/13448.patch",
      "merged_at": null
    },
    "body": "This commit adds support for sigils containing integers. Integers must be proceeded by an upper case alpha, but can otherwise be mixed (e.g., `~A1B2C3`).",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13448/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13445",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13445/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13445/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13445/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/13445",
    "id": 2210114554,
    "node_id": "I_kwDOABLXGs6Du6v6",
    "number": 13445,
    "title": "Building a shared global environment",
    "user": {
      "login": "josevalim",
      "id": 9582,
      "node_id": "MDQ6VXNlcjk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josevalim",
      "html_url": "https://github.com/josevalim",
      "followers_url": "https://api.github.com/users/josevalim/followers",
      "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
      "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
      "organizations_url": "https://api.github.com/users/josevalim/orgs",
      "repos_url": "https://api.github.com/users/josevalim/repos",
      "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josevalim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 778790,
        "node_id": "MDU6TGFiZWw3Nzg3OTA=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion",
        "name": "Note:Discussion",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2024-03-27T07:57:42Z",
    "updated_at": "2024-04-04T10:43:49Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Hi @lukaszsamson, @mhanberg, @scohen, and @michalmuskala!\r\n\r\nWe have had several discussions in the past about improving Elixir for language servers. The discussions usually centered around two topics:\r\n\r\n* The global environment which contains all modules and functions, alongside their imports, aliases, requires, etc (note that not all modules are compiled with tracer events, such as the ones from Elixir or Erlang modules, so there is still need to fallback to runtime reflection APIs)\r\n\r\n* The buffer environment which is obtained by analyzing the currently open file and only makes sense within the current file (variable definition, module attributes)\r\n\r\nIn order to build the global environment, language servers need to add their own compilation tracers, and customize compilation. In turn, that requires a custom build directory and the need to compile all code at least twice. I would like to discuss the option of having Mix build this shared global environment instead.\r\n\r\nIn a nutshell, the idea is that Mix in dev mode will either add a separate .termdb file alongside each .beam file or augment the .beam files with an additional chunk. This way, language servers can rely on the regular code compilation to generate all artifacts they need and then use the file watching mechanism to observe when such files are added or removed. You can then load such files into another database of your preference. Another file will be made available with compilation diagnostics as well, so they can be shown in the UI.\r\n\r\nHere are questions for you:\r\n\r\n1. How does this idea sound? Would it help your language server?\r\n2. I am assuming language servers can watch how .termdb files will be added to _build, is this true?\r\n\r\nAssuming we are happy with this, we should discuss:\r\n\r\n3. How to store this information? .beam files? Separate files? Which format?\r\n4. What to store in those files. We can probably summarize the needs of all language servers.\r\n5. Anything else?\r\n\r\nThank you for your time.\r\n\r\nPS: the language server can also just run `mix compile` to trigger a new compilation. However, we need to add locking to make sure we don't have concurrent compilations, @lukaszsamson plans to explore this feature too.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13445/reactions",
      "total_count": 6,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 6,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13445/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13419",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13419/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13419/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13419/events",
    "html_url": "https://github.com/elixir-lang/elixir/pull/13419",
    "id": 2195109506,
    "node_id": "PR_kwDOABLXGs5qGM9u",
    "number": 13419,
    "title": "Change how CI jobs are canceled",
    "user": {
      "login": "sobolevn",
      "id": 4660275,
      "node_id": "MDQ6VXNlcjQ2NjAyNzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4660275?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sobolevn",
      "html_url": "https://github.com/sobolevn",
      "followers_url": "https://api.github.com/users/sobolevn/followers",
      "following_url": "https://api.github.com/users/sobolevn/following{/other_user}",
      "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions",
      "organizations_url": "https://api.github.com/users/sobolevn/orgs",
      "repos_url": "https://api.github.com/users/sobolevn/repos",
      "events_url": "https://api.github.com/users/sobolevn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sobolevn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-03-19T14:19:25Z",
    "updated_at": "2024-03-21T06:02:02Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/pulls/13419",
      "html_url": "https://github.com/elixir-lang/elixir/pull/13419",
      "diff_url": "https://github.com/elixir-lang/elixir/pull/13419.diff",
      "patch_url": "https://github.com/elixir-lang/elixir/pull/13419.patch",
      "merged_at": null
    },
    "body": "This PR adds two changes:\r\n1. It introduces `concurrency:` flag to the workflow, to cancel older jobs for the same branch. It is really helpful for PRs, so no stale jobs will continue to operate when new commits are pushed to the same branch\r\n2. I've added `fail-fast: false` to Windows jobs to be in sync with other jobs",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13419/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13386",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13386/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13386/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13386/events",
    "html_url": "https://github.com/elixir-lang/elixir/pull/13386",
    "id": 2165001590,
    "node_id": "PR_kwDOABLXGs5ofjyx",
    "number": 13386,
    "title": "Implement guard-safe `MapSet.is_member/2`",
    "user": {
      "login": "christhekeele",
      "id": 1406220,
      "node_id": "MDQ6VXNlcjE0MDYyMjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1406220?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christhekeele",
      "html_url": "https://github.com/christhekeele",
      "followers_url": "https://api.github.com/users/christhekeele/followers",
      "following_url": "https://api.github.com/users/christhekeele/following{/other_user}",
      "gists_url": "https://api.github.com/users/christhekeele/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christhekeele/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christhekeele/subscriptions",
      "organizations_url": "https://api.github.com/users/christhekeele/orgs",
      "repos_url": "https://api.github.com/users/christhekeele/repos",
      "events_url": "https://api.github.com/users/christhekeele/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christhekeele/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2024-03-02T22:27:38Z",
    "updated_at": "2024-03-31T19:00:15Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/pulls/13386",
      "html_url": "https://github.com/elixir-lang/elixir/pull/13386",
      "diff_url": "https://github.com/elixir-lang/elixir/pull/13386.diff",
      "patch_url": "https://github.com/elixir-lang/elixir/pull/13386.patch",
      "merged_at": null
    },
    "body": "Per discussion on [elixir-lang-core](https://groups.google.com/g/elixir-lang-core/c/IRrfWoT55OM/m/QrGys8t_AQAJ), this provides a guard-safe membership check for `MapSet`s without modifying the existing `MapSet.member?/2`.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13386/reactions",
      "total_count": 5,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 5,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13386/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13326",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13326/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13326/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13326/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/13326",
    "id": 2126357835,
    "node_id": "I_kwDOABLXGs5-vaVL",
    "number": 13326,
    "title": "Race condition when running two elixir scripts in the same unix pipeline",
    "user": {
      "login": "kidq330",
      "id": 68378289,
      "node_id": "MDQ6VXNlcjY4Mzc4Mjg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/68378289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kidq330",
      "html_url": "https://github.com/kidq330",
      "followers_url": "https://api.github.com/users/kidq330/followers",
      "following_url": "https://api.github.com/users/kidq330/following{/other_user}",
      "gists_url": "https://api.github.com/users/kidq330/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kidq330/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kidq330/subscriptions",
      "organizations_url": "https://api.github.com/users/kidq330/orgs",
      "repos_url": "https://api.github.com/users/kidq330/repos",
      "events_url": "https://api.github.com/users/kidq330/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kidq330/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 207974,
        "node_id": "MDU6TGFiZWwyMDc5NzQ=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug",
        "name": "Kind:Bug",
        "color": "e10c02",
        "default": false,
        "description": null
      },
      {
        "id": 10229539,
        "node_id": "MDU6TGFiZWwxMDIyOTUzOQ==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Mix",
        "name": "App:Mix",
        "color": "CCCCCC",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2024-02-09T02:09:29Z",
    "updated_at": "2024-04-03T19:05:54Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### Elixir and Erlang/OTP versions\n\n```console\r\nroot@13f3f753ab50:/workspace/membrane/mix_cache_mre:λ> elixir -v\r\nErlang/OTP 26 [erts-14.2.1] [source] [64-bit] [smp:5:5] [ds:5:5:10] [async-threads:1] [jit]\r\n\r\nElixir 1.15.7 (compiled with Erlang/OTP 24)\r\n```\n\n### Operating system\n\nDebian 12 container\n\n### Current behavior\n\nScenario: I have two separate .exs scripts:\r\n\r\nconcat1.exs:\r\n```elixir\r\nMix.install([:bunch], force: true, verbose: true, system_env: %{ID: <<1>>})\r\n(IO.read(:eof) <> \"\\nAdding a string\\n\") |> IO.puts()\r\n```\r\n\r\nconcat2.exs:\r\n```elixir\r\nMix.install([:bunch], force: true, verbose: true, system_env: %{ID: <<2>>})\r\n(IO.read(:eof) <> \"\\nAdding some other string\\n\") |> IO.puts()\r\n```\r\n\r\nI would like to run both inside the same command, like so:\r\n```console\r\nroot@13f3f753ab50:/workspace/membrane/mix_cache_mre:λ> echo hello | elixir concat1.exs | elixir concat2.exs \r\nMix.install/2 using /root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/74a5dcec56f0af74a6e975a852595e45\r\nResolving Hex dependencies...\r\nResolution completed in 0.007s\r\nNew:\r\n  bunch 1.6.1\r\n* Getting bunch (Hex package)\r\n==> bunch\r\nCompiling 19 files (.ex)\r\nGenerated bunch app\r\nMix.install/2 using /root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/1e09fc90d768c108cbadc8d6e2258f56\r\nResolving Hex dependencies...\r\nResolution completed in 0.007s\r\nNew:\r\n  bunch 1.6.1\r\n* Getting bunch (Hex package)\r\n==> bunch\r\nCompiling 19 files (.ex)\r\nGenerated bunch app\r\nhello\r\n\r\nAdding a string\r\n\r\n\r\nAdding some other string\r\n\r\n```\r\n\r\nThis works because they're using different caches, as you can see by the `Mix.install/2 using ...` lines.\r\nUnfortunately the process of generating a hash to use for the cache is imo not strict enough, if I delete the `system_env:` option from both scripts (or just set it to the same value) they will generate the same hash, and might fight over the cache. Example below:\r\n\r\nconcat1.exs:\r\n```elixir\r\nMix.install([:bunch], force: true, verbose: true)\r\n(IO.read(:eof) <> \"\\nAdding a string\\n\") |> IO.puts()\r\n```\r\n\r\nconcat2.exs:\r\n```elixir\r\nMix.install([:bunch], force: true, verbose: true)\r\n(IO.read(:eof) <> \"\\nAdding some other string\\n\") |> IO.puts()\r\n```\r\n\r\n```console\r\nroot@13f3f753ab50:/workspace/membrane/mix_cache_mre:λ> echo hello | elixir concat1.exs | elixir concat2.exs \r\nMix.install/2 using /root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/f56c8600b5d135b8a055d35801b604df\r\n** (File.Error) could not get current working directory nil: no such file or directory\r\n    (elixir 1.15.7) lib/file.ex:1567: File.cwd!/0\r\n    (elixir 1.15.7) lib/path.ex:47: Path.absname/1\r\n    (mix 1.15.7) lib/mix/dep/loader.ex:361: Mix.Dep.Loader.mix_children/3\r\n    (mix 1.15.7) lib/mix/dep/loader.ex:18: Mix.Dep.Loader.children/1\r\n    (mix 1.15.7) lib/mix/dep/converger.ex:97: Mix.Dep.Converger.all/4\r\n    (mix 1.15.7) lib/mix/dep/converger.ex:89: Mix.Dep.Converger.converge/4\r\n    (mix 1.15.7) lib/mix/dep/fetcher.ex:16: Mix.Dep.Fetcher.all/3\r\n    (mix 1.15.7) lib/mix/tasks/deps.get.ex:34: Mix.Tasks.Deps.Get.run/1\r\nFailed to write log message to stdout, trying stderr\r\n\r\n01:02:56.897 [info] Failed to write to standard out (:epipe)\r\n** (ArgumentError) errors were found at the given arguments:\r\n\r\n  * 1st argument: broken pipe (epipe)\r\n\r\n    (stdlib 5.2) io.erl:103: :io.put_chars(:standard_io, [[[], \"Resolving Hex dependencies...\"], 10])\r\n    (hex 2.0.6) lib/hex/remote_converger.ex:54: Hex.RemoteConverger.converge/2\r\n    (mix 1.15.7) lib/mix/dep/converger.ex:133: Mix.Dep.Converger.all/4\r\n    (mix 1.15.7) lib/mix/dep/converger.ex:89: Mix.Dep.Converger.converge/4\r\n    (mix 1.15.7) lib/mix/dep/fetcher.ex:16: Mix.Dep.Fetcher.all/3\r\n    (mix 1.15.7) lib/mix/tasks/deps.get.ex:34: Mix.Tasks.Deps.Get.run/1\r\n    (mix 1.15.7) lib/mix/task.ex:455: anonymous fn/3 in Mix.Task.run_task/5\r\n    (mix 1.15.7) lib/mix.ex:881: anonymous fn/5 in Mix.install/2\r\n```\r\n\r\nWhile the problem is less prevalent without `force: true`, it may still happen if no cache yet exists:\r\n\r\n```console\r\nroot@13f3f753ab50:/workspace/membrane/mix_cache_mre:λ> while /bin/rm -rf /root/.cache/mix/installs/ && sleep 5 && echo hello | elixir concat1.exs\r\n | elixir concat2.exs ; do :; done\r\nMix.install/2 using /root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/f56c8600b5d135b8a055d35801b604df\r\nResolving Hex dependencies...\r\nResolution completed in 0.011s\r\nNew:\r\n  bunch 1.6.1\r\n* Getting bunch (Hex package)\r\n==> bunch\r\nCompiling 19 files (.ex)\r\nGenerated bunch app\r\n** (exit) exited in: GenServer.call(:hex_fetcher, {:await, {:tarball, \"hexpm\", \"bunch\", \"1.6.1\"}}, 120000)\r\n    ** (EXIT) time out\r\n    (elixir 1.15.7) lib/gen_server.ex:1074: GenServer.call/3\r\n    (hex 2.0.6) lib/hex/scm.ex:128: Hex.SCM.update/1\r\n    (mix 1.15.7) lib/mix/dep/fetcher.ex:61: Mix.Dep.Fetcher.do_fetch/3\r\n    (mix 1.15.7) lib/mix/dep/converger.ex:229: Mix.Dep.Converger.all/8\r\n    (mix 1.15.7) lib/mix/dep/converger.ex:162: Mix.Dep.Converger.init_all/8\r\n    (mix 1.15.7) lib/mix/dep/converger.ex:146: Mix.Dep.Converger.all/4\r\n    (mix 1.15.7) lib/mix/dep/converger.ex:89: Mix.Dep.Converger.converge/4\r\n    (mix 1.15.7) lib/mix/dep/fetcher.ex:16: Mix.Dep.Fetcher.all/3\r\nMix.install/2 using /root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/f56c8600b5d135b8a055d35801b604df\r\nResolving Hex dependencies...\r\nResolution completed in 0.01s\r\nNew:\r\n  bunch 1.6.1\r\n* Updating bunch (Hex package)\r\n\r\nAdding some other string\r\n\r\nMix.install/2 using /root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/f56c8600b5d135b8a055d35801b604df\r\nResolving Hex dependencies...\r\nResolution completed in 0.01s\r\nNew:\r\n  bunch 1.6.1\r\n* Getting bunch (Hex package)\r\n==> bunch\r\nCompiling 19 files (.ex)\r\nGenerated bunch app\r\nwarning: redefining module Bunch.Struct (current version loaded from /root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/f56c8600b5d135b8a055d35801b604df/_build/dev/lib/bunch/ebin/Elixir.Bunch.Struct.beam)\r\n  lib/bunch/struct.ex:1: Bunch.Struct (module)\r\n\r\nwarning: redefining module Bunch.ShortRef (current version loaded from /root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/f56c8600b5d135b8a055d35801b604df/_build/dev/lib/bunch/ebin/Elixir.Bunch.ShortRef.beam)\r\n  lib/bunch/short_ref.ex:1: Bunch.ShortRef (module)\r\n\r\nwarning: redefining module Bunch.Typespec (current version loaded from /root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/f56c8600b5d135b8a055d35801b604df/_build/dev/lib/bunch/ebin/Elixir.Bunch.Typespec.beam)\r\n  lib/bunch/typespec.ex:1: Bunch.Typespec (module)\r\n\r\nwarning: redefining module Bunch.Type (current version loaded from /root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/f56c8600b5d135b8a055d35801b604df/_build/dev/lib/bunch/ebin/Elixir.Bunch.Type.beam)\r\n  lib/bunch/type.ex:1: Bunch.Type (module)\r\n\r\nwarning: redefining module Inspect.Bunch.ShortRef (current version loaded from /root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/f56c8600b5d135b8a055d35801b604df/_build/dev/lib/bunch/ebin/Elixir.Inspect.Bunch.ShortRef.beam)\r\n  lib/bunch/short_ref.ex:49: Inspect.Bunch.ShortRef (module)\r\n\r\n** (EXIT from #PID<0.99.0>) an exception was raised:\r\n    ** (File.Error) could not write to file \"/root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/f56c8600b5d135b8a055d35801b604df/_build/dev/lib/mix_install/consolidated/Elixir.Collectable.beam\": no such file or directory\r\n        (elixir 1.15.7) lib/file.ex:1117: File.write!/3\r\n        (mix 1.15.7) lib/mix/tasks/compile.protocols.ex:142: Mix.Tasks.Compile.Protocols.consolidate/4\r\n        (elixir 1.15.7) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2\r\n        (elixir 1.15.7) lib/task/supervised.ex:36: Task.Supervised.reply/4\r\n\r\n\r\n02:06:40.177 [error] Task #PID<0.316.0> started from #PID<0.99.0> terminating\r\n** (File.Error) could not write to file \"/root/.cache/mix/installs/elixir-1.15.7-erts-14.2.1/f56c8600b5d135b8a055d35801b604df/_build/dev/lib/mix_install/consolidated/Elixir.Collectable.beam\": no such file or directory\r\n    (elixir 1.15.7) lib/file.ex:1117: File.write!/3\r\n    (mix 1.15.7) lib/mix/tasks/compile.protocols.ex:142: Mix.Tasks.Compile.Protocols.consolidate/4\r\n    (elixir 1.15.7) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2\r\n    (elixir 1.15.7) lib/task/supervised.ex:36: Task.Supervised.reply/4\r\nFunction: #Function<9.61781368/0 in Mix.Tasks.Compile.Protocols.consolidate/6>\r\n    Args: []\r\nFailed to write log message to stdout, trying stderr\r\n\r\n02:06:40.272 [info] Failed to write to standard out (:epipe)\r\n** (ArgumentError) errors were found at the given arguments:\r\n\r\n  * 1st argument: broken pipe (epipe)\r\n\r\n    (stdlib 5.2) io.erl:103: :io.put_chars(:standard_io, [\"hello\\n\\nAdding a string\\n\", 10])\r\n    concat1.exs:2: (file)\r\n```\n\n### Expected behavior\n\nThe pipeline works as in the case where the scripts have unique `system_env`'s, (that is, separate cache directories).",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13326/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13227",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13227/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13227/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13227/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/13227",
    "id": 2067700841,
    "node_id": "I_kwDOABLXGs57Ppxp",
    "number": 13227,
    "title": "Set-theoretic types: inference of patterns and guards",
    "user": {
      "login": "josevalim",
      "id": 9582,
      "node_id": "MDQ6VXNlcjk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josevalim",
      "html_url": "https://github.com/josevalim",
      "followers_url": "https://api.github.com/users/josevalim/followers",
      "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
      "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
      "organizations_url": "https://api.github.com/users/josevalim/orgs",
      "repos_url": "https://api.github.com/users/josevalim/repos",
      "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josevalim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2660471585,
        "node_id": "MDU6TGFiZWwyNjYwNDcxNTg1",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir%20(checker)",
        "name": "App:Elixir (checker)",
        "color": "CCCCCC",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-01-05T16:56:40Z",
    "updated_at": "2024-03-07T20:59:58Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The goal of this issue is to track the main tasks for the first milestone of set theoretic types: type inference of patterns and guards, followed by body checking.\r\n\r\nTyping description:\r\n\r\n* [x] Non-divisible types (integer, floats, pids, etc)\r\n* [x] Dynamic\r\n* [x] Atoms\r\n* [ ] Maps\r\n* [ ] Tuples\r\n* [ ] Lists\r\n* [ ] Functions\r\n\r\nType inference and checking:\r\n\r\n* [x] Tracking of variables\r\n* [x] Type inference and checking of bitstring syntax\r\n* [ ] Type inference of patterns\r\n* [ ] Type inference of guards\r\n* [ ] Support of every syntax construct\r\n* [ ] Support for `__info__`\r\n* [ ] Support for local calls\r\n* [ ] Support for application of types inferred from types and guards\r\n* [ ] Support for application of Kernel and stdlib functions\r\n* [ ] Support for application of Map operations\r\n\r\nThese are additional features not required for the first milestone:\r\n\r\n* [ ] Storing of inferred types in .beam files\r\n* [ ] Detecting overlapping clauses (cond, case, receive, try)\r\n* [ ] Detecting unused clauses (cond, case, receive, try)\r\n* [ ] Exhaustiveness checks\r\n* [ ] Typing of protocol implementations\r\n* [ ] Tracking of structs in comparison operators\r\n\r\nLong term:\r\n\r\n* [ ] Type variables\r\n* [ ] Strong arrows\r\n* [ ] Row polymorphism\r\n* [ ] Behaviours",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13227/reactions",
      "total_count": 89,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 65,
      "rocket": 16,
      "eyes": 7
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13227/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13165",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13165/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13165/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13165/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/13165",
    "id": 2034627629,
    "node_id": "I_kwDOABLXGs55RfQt",
    "number": 13165,
    "title": "Elixir silently removes exclamation marks and reports no such file (Windows 10)",
    "user": {
      "login": "robss2020",
      "id": 70531052,
      "node_id": "MDQ6VXNlcjcwNTMxMDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/70531052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robss2020",
      "html_url": "https://github.com/robss2020",
      "followers_url": "https://api.github.com/users/robss2020/followers",
      "following_url": "https://api.github.com/users/robss2020/following{/other_user}",
      "gists_url": "https://api.github.com/users/robss2020/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robss2020/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robss2020/subscriptions",
      "organizations_url": "https://api.github.com/users/robss2020/orgs",
      "repos_url": "https://api.github.com/users/robss2020/repos",
      "events_url": "https://api.github.com/users/robss2020/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robss2020/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 207974,
        "node_id": "MDU6TGFiZWwyMDc5NzQ=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug",
        "name": "Kind:Bug",
        "color": "e10c02",
        "default": false,
        "description": null
      },
      {
        "id": 42568887,
        "node_id": "MDU6TGFiZWw0MjU2ODg4Nw==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Note:Windows",
        "name": "Note:Windows",
        "color": "5319e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2023-12-11T00:52:21Z",
    "updated_at": "2024-03-22T18:20:05Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### Elixir and Erlang/OTP versions\n\nErlang/OTP 26 [erts-14.1.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]\r\n\r\nElixir 1.15.7 (compiled with Erlang/OTP 26)\n\n### Operating system\n\nWindows 10\n\n### Current behavior\n\nExclamation marks are silently removed from filenames, although they are allowed characters in Windows, and an error is reported.\r\n\r\nTo reproduce: save IO.puts(\"Hello, world!\") as \"hello world!.exs\" and execute it with:\r\nelixir \"hello world!.exs\"\r\nIt will fail with \"no file named hello world.exs\" (silently removing the exclamation mark). Also works without quotation marks as a single word (helloworld!.exs).\r\n\r\nC:\\test>elixir \"hello world!.exs\"\r\nNo file named hello world.exs\r\n\r\n![image](https://github.com/elixir-lang/elixir/assets/70531052/fc18d6ee-d003-4506-b228-d8275e5898c0)\r\n\r\n![image](https://github.com/elixir-lang/elixir/assets/70531052/24db2433-5c1a-4ecf-8fec-ee3d670cbe70)\r\n\n\n### Expected behavior\n\nIf it is legal in the operating system it should be accepted as an input file, or at least the error message should say \"! is not allowed in filename\" if it can't be run for some reason.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13165/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/12929",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12929/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12929/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12929/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/12929",
    "id": 1895272237,
    "node_id": "I_kwDOABLXGs5w948t",
    "number": 12929,
    "title": "Directional confusability: _א1 and _1א not detected (unicode 15.1's new TR55, and updated TR39)",
    "user": {
      "login": "mrluc",
      "id": 38204,
      "node_id": "MDQ6VXNlcjM4MjA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrluc",
      "html_url": "https://github.com/mrluc",
      "followers_url": "https://api.github.com/users/mrluc/followers",
      "following_url": "https://api.github.com/users/mrluc/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrluc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrluc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrluc/subscriptions",
      "organizations_url": "https://api.github.com/users/mrluc/orgs",
      "repos_url": "https://api.github.com/users/mrluc/repos",
      "events_url": "https://api.github.com/users/mrluc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrluc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 4930795,
        "node_id": "MDU6TGFiZWw0OTMwNzk1",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement",
        "name": "Kind:Enhancement",
        "color": "009800",
        "default": false,
        "description": null
      },
      {
        "id": 1000549131,
        "node_id": "MDU6TGFiZWwxMDAwNTQ5MTMx",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir%20(compiler)",
        "name": "App:Elixir (compiler)",
        "color": "CCCCCC",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2023-09-13T21:11:49Z",
    "updated_at": "2024-02-16T16:58:21Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### Elixir and Erlang/OTP versions\n\notp 25, elixir 14\n\n### Operating system\n\nosx\n\n### Current behavior\n\nAn issue to kick off convo -- I found a few implications for us upon reading 15.'s new [technical report on source code, TR55](https://www.unicode.org/reports/tr55/) and the updated TR39.\r\n\r\nAs the title says -- in visual studio code and Emacs, I see the same thing I see in the issue title: what look like identical tokens. I can't paste this code into a selectable code sample here, because this editor does wacky things to it! But I'm pasting an image below.\r\n\r\n![image](https://github.com/elixir-lang/elixir/assets/38204/189c627b-ecb8-45a1-b44a-9089b94f2d59)\r\n\r\nCompiles and runs fine despite the tokens looking confusable.\r\n\n\n### Expected behavior\n\nShould fail or warn as the variable names are visually confusable -- only when selecting text/moving cursor do you see the order change. I'll be curious to see if this survives in the issue title or does anything weird there, actually!\r\n\r\nWe would need to implement the *brand new definition* of Confusability -- LTR confusability in this case -- to catch it.\r\n\r\nFound from reading a TR55 example -- they classify levels of confusability detection (we'd be Type 1, I guess), but they mention this case about Rust's detection:\r\n\r\n> Industry example: The Rust compiler implements type II confusable detection, by flagging any confusable identifiers within a crate, with the exception that it uses confusability rather than LTR-confusability (so that it would fail to diagnose the confusability of the **identifiers aא1 and a1א**).\r\n\r\n**There's a lot in there that's relevant**, actually, in addition to big changes to TR39. *This* is the group of people/technical report that's actually thinking closest to 1:1 about the whole experience for PL creators <> users writing in other languages.\r\n\r\n* For instance, they describe a less-restrictive-while-still-secure notion of 'confusable chunk detection' that we may want to take a look at, because of the better UX it gives.\r\n* Similarly they mention whole languages that are excluded without an addition to the General Security Profile for zero-width joiner characters -- ie you can't write the Persian word for 'update' in Elixir currently as an identifier (and other langs ofc).\r\n* @josevalim someone might want to make an issue to look through TR55 and the updated TR39 and see where we stand -- we could make an issue for that and assign it to me if we wanted.\r\n\r\n**There's some stuff we may disagree on**\r\n\r\n* for instance, tucked away in both TR55 and TR39 is now a claim that all programming languages must allow direction to change *within identifiers*, ie a single variable where the direction you're reading changes. Which I'm not sure everyone would agree on, kinda feels like a language design question? Maybe everyone's doing it wrong. 😆\r\n\r\nI'd have bandwidth to look into it after EOM probably; I'm doing a decently painful project that ships around then.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/12929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12929/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/12857",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12857/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12857/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12857/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/12857",
    "id": 1847860651,
    "node_id": "I_kwDOABLXGs5uJB2r",
    "number": 12857,
    "title": "Support Erlang/OTP 27 new features",
    "user": {
      "login": "josevalim",
      "id": 9582,
      "node_id": "MDQ6VXNlcjk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josevalim",
      "html_url": "https://github.com/josevalim",
      "followers_url": "https://api.github.com/users/josevalim/followers",
      "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
      "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
      "organizations_url": "https://api.github.com/users/josevalim/orgs",
      "repos_url": "https://api.github.com/users/josevalim/repos",
      "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josevalim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 207979,
        "node_id": "MDU6TGFiZWwyMDc5Nzk=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore",
        "name": "Kind:Chore",
        "color": "fbca04",
        "default": false,
        "description": null
      },
      {
        "id": 17739153,
        "node_id": "MDU6TGFiZWwxNzczOTE1Mw==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir",
        "name": "App:Elixir",
        "color": "CCCCCC",
        "default": false,
        "description": null
      },
      {
        "id": 3699900406,
        "node_id": "LA_kwDOABLXGs7ch__2",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Note:Waiting",
        "name": "Note:Waiting",
        "color": "BAD83E",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2023-08-12T08:34:03Z",
    "updated_at": "2024-03-23T07:23:09Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "To be implemented when Erlang 27 is released:\r\n\r\n* [ ] tprof support\r\n* [x] Ensure we can start observer without additional steps (https://github.com/erlang/otp/pull/7441)\r\n* [x] Deprecate escaping of terminator in uppercase sigils as in [EEP 66](https://github.com/erlang/eep/blob/master/eeps/eep-0066.md)\r\n* [ ] Investigate pretty printing of new Erlang markdown docs\r\n* [ ] Support typespecs in docs from #13437\r\n* [ ] Discussion about built-in JSON API and protocol\r\n* [ ] See if Task, DynamicSupervisor, and other behaviours need to include the label in its logger events\r\n\r\nTo be implemented when we require Erlang 27 exclusively:\r\n\r\n* [ ] Remove copy and paste of the jaro_distance implementation\r\n* [ ] Expose `proc_lib:get_label`\r\n\r\nPlease do not send PRs for those, as it will take a while until we can effectively accept them.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/12857/reactions",
      "total_count": 3,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 2
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12857/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/12520",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12520/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12520/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12520/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/12520",
    "id": 1662907742,
    "node_id": "I_kwDOABLXGs5jHfVe",
    "number": 12520,
    "title": "Store compiled dependencies In _build by version",
    "user": {
      "login": "jwdotjs",
      "id": 246603,
      "node_id": "MDQ6VXNlcjI0NjYwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/246603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwdotjs",
      "html_url": "https://github.com/jwdotjs",
      "followers_url": "https://api.github.com/users/jwdotjs/followers",
      "following_url": "https://api.github.com/users/jwdotjs/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwdotjs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwdotjs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwdotjs/subscriptions",
      "organizations_url": "https://api.github.com/users/jwdotjs/orgs",
      "repos_url": "https://api.github.com/users/jwdotjs/repos",
      "events_url": "https://api.github.com/users/jwdotjs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwdotjs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 207975,
        "node_id": "MDU6TGFiZWwyMDc5NzU=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Feature",
        "name": "Kind:Feature",
        "color": "0052cc",
        "default": false,
        "description": null
      },
      {
        "id": 778790,
        "node_id": "MDU6TGFiZWw3Nzg3OTA=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion",
        "name": "Note:Discussion",
        "color": "bfdadc",
        "default": false,
        "description": null
      },
      {
        "id": 10229539,
        "node_id": "MDU6TGFiZWwxMDIyOTUzOQ==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Mix",
        "name": "App:Mix",
        "color": "CCCCCC",
        "default": false,
        "description": null
      },
      {
        "id": 39802986,
        "node_id": "MDU6TGFiZWwzOTgwMjk4Ng==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced",
        "name": "Level:Advanced",
        "color": "f7c6c7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2023-04-11T17:04:12Z",
    "updated_at": "2023-12-22T17:56:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### Elixir and Erlang/OTP versions\r\n\r\nerlang 25.2\r\nelixir 1.14.3-otp-25\r\n\r\n### Operating system\r\n\r\nMacOS - Ventura 13.1 - Apple M1 Max\r\n\r\n### Current behavior\r\n\r\nAs an engineer, when I switch between branches to provide peer review to other engineers, if dependencies changed across branches, I need to re-fetch and re-compile those dependencies. On larger projects this process can take 5-20 minutes, which can lead to slowdowns in pair programming and getting new pull requests tested, especially if I keep switching back to a local branch that I'm working on where dependencies have changed. \r\n\r\nReproduction steps:\r\n\r\n1. Start on a project that is branched off `main`\r\n2. On that branch change dependencies in `mix.exs` (either add dependencies, remove dependencies, or upgrade dependencies)\r\n3. Run `mix deps.get`\r\n4. Run `iex -S mix phx.server` to compile dependencies and the project\r\n5. Run `git checkout main` on that project\r\n6. Run `iex -S mix phx.server` and observe an error saying the lockfile doesn't match the compiled dependencies and to run `mix deps.get`\r\n7. Run `mix deps.get`\r\n8. Run `iex -S mix phx.server` and observe dependencies are re-compiled\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nHere is a proposal for `deps` and `_build` that would be a breaking change to how the project is compiled and starts up, but would speed up development by caching the compiled versions of each dependency at the cost of more disk space (which is likely an acceptable tradeoff for most).\r\n\r\nSample filesystem structure:\r\n\r\n```\r\nproject\r\n  deps\r\n     name_of_dependency\r\n         1.13.0\r\n         1.29.3\r\n  _build\r\n     lib\r\n        name_of_dependency\r\n           1.13.0\r\n           1.29.3\r\n```\r\n\r\nThe expected outcome of this change would be when I switch between a branch that has dependency changes and a branch where I already compiled dependencies with different versions, there is no time-cost associated with compiling dependencies when I switch between those two branches after they've been compiled once each\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/12520/reactions",
      "total_count": 7,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 3,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12520/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/12293",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12293/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12293/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12293/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/12293",
    "id": 1483771099,
    "node_id": "I_kwDOABLXGs5YcIzb",
    "number": 12293,
    "title": "Allow Mix.install/2 to run several times in the same instance",
    "user": {
      "login": "josevalim",
      "id": 9582,
      "node_id": "MDQ6VXNlcjk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josevalim",
      "html_url": "https://github.com/josevalim",
      "followers_url": "https://api.github.com/users/josevalim/followers",
      "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
      "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
      "organizations_url": "https://api.github.com/users/josevalim/orgs",
      "repos_url": "https://api.github.com/users/josevalim/repos",
      "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josevalim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 207975,
        "node_id": "MDU6TGFiZWwyMDc5NzU=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Feature",
        "name": "Kind:Feature",
        "color": "0052cc",
        "default": false,
        "description": null
      },
      {
        "id": 10229539,
        "node_id": "MDU6TGFiZWwxMDIyOTUzOQ==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Mix",
        "name": "App:Mix",
        "color": "CCCCCC",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2022-12-08T06:02:37Z",
    "updated_at": "2024-02-29T18:21:35Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The process should be roughly like:\r\n\r\n1. Create a new directory for the new installation\r\n2. Run mix deps.get\r\n3. Compare the versions and see which entries were added or removed\r\n4. Run a fixpoint computation until we find all application that depends on something that was added or removed\r\n5. Stop all apps, unload all modules, and remove all code paths for previous dependencies + consolidated protocols\r\n6. Copy the _build and deps entries for the ones that did not change\r\n7. Continue as usual\r\n\r\n/cc @wojtekmach ",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/12293/reactions",
      "total_count": 9,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 9,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/12293/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/11985",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/11985/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/11985/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/11985/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/11985",
    "id": 1303567863,
    "node_id": "I_kwDOABLXGs5Nst33",
    "number": 11985,
    "title": "Support Erlang/OTP 26 new features",
    "user": {
      "login": "josevalim",
      "id": 9582,
      "node_id": "MDQ6VXNlcjk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josevalim",
      "html_url": "https://github.com/josevalim",
      "followers_url": "https://api.github.com/users/josevalim/followers",
      "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
      "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
      "organizations_url": "https://api.github.com/users/josevalim/orgs",
      "repos_url": "https://api.github.com/users/josevalim/repos",
      "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josevalim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 207979,
        "node_id": "MDU6TGFiZWwyMDc5Nzk=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore",
        "name": "Kind:Chore",
        "color": "fbca04",
        "default": false,
        "description": null
      },
      {
        "id": 17739153,
        "node_id": "MDU6TGFiZWwxNzczOTE1Mw==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir",
        "name": "App:Elixir",
        "color": "CCCCCC",
        "default": false,
        "description": null
      },
      {
        "id": 3699900406,
        "node_id": "LA_kwDOABLXGs7ch__2",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Note:Waiting",
        "name": "Note:Waiting",
        "color": "BAD83E",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2022-07-13T15:00:56Z",
    "updated_at": "2024-02-28T18:38:01Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "To be implemented and backported when Erlang 26 is released:\r\n\r\n  * [x] Support `custom_options: [sort_maps: true]` for sorting maps\r\n  * [x] Make the suite resilient to unordered maps\r\n  * [x] Give the new shell on Windows a try and ensure that ANSI detection works out of the box\r\n  * [x] [Ensure history works](https://github.com/erlang/otp/issues/6896)\r\n\r\nTo be implemented when Erlang 26 is released:\r\n\r\n  * [x] Ensure we properly cache code paths\r\n  * [x] Support concurrent application boot\r\n\r\nTo be implemented when we require Erlang 26 exclusively:\r\n\r\n  * [ ] Support `min` and `max` in guards\r\n  * [ ] Support groups in autocomplete\r\n  * [ ] `:erlang.nodes/2`\r\n  * [ ] Allow parallel binary matching (https://github.com/erlang/otp/pull/6415)\r\n  * [ ] Remove WERL/--werl altogether (including release scripts)\r\n  * [ ] Remove setting of ansi_enabled from bin/ scripts\r\n  * [ ] Support multi-line parsing: https://github.com/elixir-lang/elixir/compare/jv-get-until-parser-26 | https://github.com/erlang/otp/pull/7601\r\n\r\n\r\nPlease do not send PRs for those, as it will take a while until we can effectively accept them.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/11985/reactions",
      "total_count": 23,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 22,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/11985/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/11220",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/11220/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/11220/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/11220/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/11220",
    "id": 983925306,
    "node_id": "MDU6SXNzdWU5ODM5MjUzMDY=",
    "number": 11220,
    "title": "Support Erlang/OTP 25 new features",
    "user": {
      "login": "josevalim",
      "id": 9582,
      "node_id": "MDQ6VXNlcjk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josevalim",
      "html_url": "https://github.com/josevalim",
      "followers_url": "https://api.github.com/users/josevalim/followers",
      "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
      "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
      "organizations_url": "https://api.github.com/users/josevalim/orgs",
      "repos_url": "https://api.github.com/users/josevalim/repos",
      "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josevalim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 207979,
        "node_id": "MDU6TGFiZWwyMDc5Nzk=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore",
        "name": "Kind:Chore",
        "color": "fbca04",
        "default": false,
        "description": null
      },
      {
        "id": 17739153,
        "node_id": "MDU6TGFiZWwxNzczOTE1Mw==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir",
        "name": "App:Elixir",
        "color": "CCCCCC",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/milestones/33",
      "html_url": "https://github.com/elixir-lang/elixir/milestone/33",
      "labels_url": "https://api.github.com/repos/elixir-lang/elixir/milestones/33/labels",
      "id": 10127857,
      "node_id": "MI_kwDOABLXGs4Amonx",
      "number": 33,
      "title": "v1.17",
      "description": "",
      "creator": {
        "login": "josevalim",
        "id": 9582,
        "node_id": "MDQ6VXNlcjk1ODI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josevalim",
        "html_url": "https://github.com/josevalim",
        "followers_url": "https://api.github.com/users/josevalim/followers",
        "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
        "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
        "organizations_url": "https://api.github.com/users/josevalim/orgs",
        "repos_url": "https://api.github.com/users/josevalim/repos",
        "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
        "received_events_url": "https://api.github.com/users/josevalim/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 1,
      "closed_issues": 1,
      "state": "open",
      "created_at": "2023-10-31T15:45:15Z",
      "updated_at": "2024-03-23T07:22:14Z",
      "due_on": "2024-05-31T07:00:00Z",
      "closed_at": null
    },
    "comments": 13,
    "created_at": "2021-08-31T14:24:47Z",
    "updated_at": "2023-11-01T11:22:21Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "To be implemented when Erlang 25 is released:\r\n\r\n  * [x] Format terms in binary construction error message (https://github.com/erlang/otp/pull/5281)\r\n  * [x] Improved error messages in evaluation (https://github.com/erlang/otp/pull/5631)\r\n  * [x] Add pretty printing from EEP 54 (https://github.com/erlang/otp/pull/5752)\r\n  * [x] Add compile attribute `-nifs`\r\n\r\nTo be implemented when we require Erlang 25 exclusively:\r\n\r\n  * [ ] Use \"undefined\" as node name for remote/rpc and document `-start_epmd false -erl_epmd_port 6789` on both vm.args/remote.vm.args if you need epmdless\r\n  * [x] Use `:erlang.float_to_binary([:short])` in `Float.to_string/1` instead of private API\r\n  * [ ] Use new `format_status/1` callback for GenServer\r\n  * [x] Remove the `calling_self` clause in `GenServer.call` as that is now in Erlang/OTP\r\n  * [x] Use new system certificates\r\n\r\nPlease do not send PRs for those, as it will take a while until we can effectively accept them.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/11220/reactions",
      "total_count": 51,
      "+1": 29,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 17,
      "rocket": 4,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/11220/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/10813",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/10813/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/10813/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/10813/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/10813",
    "id": 840704496,
    "node_id": "MDU6SXNzdWU4NDA3MDQ0OTY=",
    "number": 10813,
    "title": "Make ranges have a default step of 1",
    "user": {
      "login": "josevalim",
      "id": 9582,
      "node_id": "MDQ6VXNlcjk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josevalim",
      "html_url": "https://github.com/josevalim",
      "followers_url": "https://api.github.com/users/josevalim/followers",
      "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
      "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
      "organizations_url": "https://api.github.com/users/josevalim/orgs",
      "repos_url": "https://api.github.com/users/josevalim/repos",
      "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josevalim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 207979,
        "node_id": "MDU6TGFiZWwyMDc5Nzk=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore",
        "name": "Kind:Chore",
        "color": "fbca04",
        "default": false,
        "description": null
      },
      {
        "id": 17739153,
        "node_id": "MDU6TGFiZWwxNzczOTE1Mw==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir",
        "name": "App:Elixir",
        "color": "CCCCCC",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/milestones/19",
      "html_url": "https://github.com/elixir-lang/elixir/milestone/19",
      "labels_url": "https://api.github.com/repos/elixir-lang/elixir/milestones/19/labels",
      "id": 1889114,
      "node_id": "MDk6TWlsZXN0b25lMTg4OTExNA==",
      "number": 19,
      "title": "v2.0",
      "description": "",
      "creator": {
        "login": "josevalim",
        "id": 9582,
        "node_id": "MDQ6VXNlcjk1ODI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josevalim",
        "html_url": "https://github.com/josevalim",
        "followers_url": "https://api.github.com/users/josevalim/followers",
        "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
        "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
        "organizations_url": "https://api.github.com/users/josevalim/orgs",
        "repos_url": "https://api.github.com/users/josevalim/repos",
        "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
        "received_events_url": "https://api.github.com/users/josevalim/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 2,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2016-07-18T10:36:08Z",
      "updated_at": "2021-03-30T08:17:50Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 4,
    "created_at": "2021-03-25T08:50:10Z",
    "updated_at": "2021-04-26T06:55:49Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Today ranges without an explicit step have their step inferred based on start..stop, but instead we should default to always be 1. Given this is a breaking change, it has to be assigned to Elixir v2.0 (which is still not planned nor scheduled).\r\n\r\nThe goal is to deprecate most of those cases early on, to avoid surprises down the road. We should also consider adding a `elixir --future` flag that allows developers to run and compile their codebase with these changes early on.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/10813/reactions",
      "total_count": 10,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 10,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/10813/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/9510",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/9510/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/9510/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/9510/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/9510",
    "id": 520133627,
    "node_id": "MDU6SXNzdWU1MjAxMzM2Mjc=",
    "number": 9510,
    "title": "Remove ambiguity in nullary remote calls with unknown targets",
    "user": {
      "login": "josevalim",
      "id": 9582,
      "node_id": "MDQ6VXNlcjk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josevalim",
      "html_url": "https://github.com/josevalim",
      "followers_url": "https://api.github.com/users/josevalim/followers",
      "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
      "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
      "organizations_url": "https://api.github.com/users/josevalim/orgs",
      "repos_url": "https://api.github.com/users/josevalim/repos",
      "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josevalim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 207979,
        "node_id": "MDU6TGFiZWwyMDc5Nzk=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore",
        "name": "Kind:Chore",
        "color": "fbca04",
        "default": false,
        "description": null
      },
      {
        "id": 17739153,
        "node_id": "MDU6TGFiZWwxNzczOTE1Mw==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir",
        "name": "App:Elixir",
        "color": "CCCCCC",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2019-11-08T17:16:55Z",
    "updated_at": "2023-10-30T20:48:42Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "  * [x] Deprecate `map.foo()` in favor of `map.foo`\r\n  * [x] Deprecate `mod.foo` in favor of `mod.foo()`\r\n  * [ ] Change the AST so remote calls (`A.b`, `a.b`, etc) without parens has `nil` third element. Once we do so, remove :no_parens metadata usage throughout the codebase (perhaps behind the `--future` flag)\r\n\r\nPS: originally this issue was about deprecating all nullary remote calls without parens, but it has been restricted since then. See [this comment](https://github.com/elixir-lang/elixir/issues/9510#issuecomment-598136655) for more info.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/9510/reactions",
      "total_count": 21,
      "+1": 18,
      "-1": 0,
      "laugh": 0,
      "hooray": 3,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/9510/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/8262",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/8262/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/8262/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/8262/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/8262",
    "id": 368335571,
    "node_id": "MDU6SXNzdWUzNjgzMzU1NzE=",
    "number": 8262,
    "title": "mix clean --deps does not clean out .erl files generated by yecc/leex",
    "user": {
      "login": "f355",
      "id": 145105,
      "node_id": "MDQ6VXNlcjE0NTEwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/145105?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/f355",
      "html_url": "https://github.com/f355",
      "followers_url": "https://api.github.com/users/f355/followers",
      "following_url": "https://api.github.com/users/f355/following{/other_user}",
      "gists_url": "https://api.github.com/users/f355/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/f355/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/f355/subscriptions",
      "organizations_url": "https://api.github.com/users/f355/orgs",
      "repos_url": "https://api.github.com/users/f355/repos",
      "events_url": "https://api.github.com/users/f355/events{/privacy}",
      "received_events_url": "https://api.github.com/users/f355/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 207974,
        "node_id": "MDU6TGFiZWwyMDc5NzQ=",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug",
        "name": "Kind:Bug",
        "color": "e10c02",
        "default": false,
        "description": null
      },
      {
        "id": 10229539,
        "node_id": "MDU6TGFiZWwxMDIyOTUzOQ==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Mix",
        "name": "App:Mix",
        "color": "CCCCCC",
        "default": false,
        "description": null
      },
      {
        "id": 39802986,
        "node_id": "MDU6TGFiZWwzOTgwMjk4Ng==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced",
        "name": "Level:Advanced",
        "color": "f7c6c7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2018-10-09T18:19:31Z",
    "updated_at": "2020-07-14T16:21:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### Current behavior\r\n\r\nWhen running `mix clean --deps`, the `.erl` files generated from `.xrl`/`.yrl` are left behind.\r\n\r\n### Expected behavior\r\n\r\nAll artefacts and intermediate files for the dependencies are deleted after running `mix clean --deps`, leaving the tree as it looked after `mix deps.get`, before the compilation.\r\n\r\n### Steps to reproduce\r\n\r\nI'll use Absinthe as an example dependency. I'm using a GitHub tag instead of Hex version, because the artefact pushed to Hex has the `.erl` files in question included for some reason (which might be a separate issue around `mix hex.publish` that's outside of the scope for this bug report).\r\n\r\n- Create a new project: `mix new mix_bug && cd mix_bug`\r\n- Edit mix.exs to add `{:absinthe, git: \"https://github.com/absinthe-graphql/absinthe.git\", tag: \"v1.4.13\"}` to the list of deps.\r\n- Fetch the dependencies: `mix deps.get`\r\n- Verify there are no `.erl` files:\r\n```bash\r\n$ ls deps/absinthe/src\r\nabsinthe_lexer.xrl  absinthe_parser.yrl\r\n```\r\n- Compile and clean the project: `mix compile && mix clean --deps`\r\n- The `.erl` files should be gone after cleaning, but they are not:\r\n```bash\r\n$ ls deps/absinthe/src/\r\nabsinthe_lexer.erl  absinthe_lexer.xrl  absinthe_parser.erl absinthe_parser.yrl\r\n```\r\n\r\n### Environment\r\n\r\n* Elixir & Erlang/OTP versions (elixir --version): \r\n```bash\r\n$ elixir --version\r\nErlang/OTP 21 [erts-10.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [hipe] [dtrace]\r\n\r\nElixir 1.7.3 (compiled with Erlang/OTP 21)\r\n```\r\n* Mix version:\r\n```bash\r\n$ mix --version\r\nErlang/OTP 21 [erts-10.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [hipe] [dtrace]\r\n\r\nMix 1.7.3 (compiled with Erlang/OTP 21)\r\n```\r\n* Operating system: \r\nmacOS Mojave 10.14",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/8262/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/8262/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/elixir-lang/elixir/issues/8095",
    "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
    "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/8095/labels{/name}",
    "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/8095/comments",
    "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/8095/events",
    "html_url": "https://github.com/elixir-lang/elixir/issues/8095",
    "id": 351357969,
    "node_id": "MDU6SXNzdWUzNTEzNTc5Njk=",
    "number": 8095,
    "title": "Provide an API to access documentation metadata at compile time",
    "user": {
      "login": "hauleth",
      "id": 291639,
      "node_id": "MDQ6VXNlcjI5MTYzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/291639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hauleth",
      "html_url": "https://github.com/hauleth",
      "followers_url": "https://api.github.com/users/hauleth/followers",
      "following_url": "https://api.github.com/users/hauleth/following{/other_user}",
      "gists_url": "https://api.github.com/users/hauleth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hauleth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hauleth/subscriptions",
      "organizations_url": "https://api.github.com/users/hauleth/orgs",
      "repos_url": "https://api.github.com/users/hauleth/repos",
      "events_url": "https://api.github.com/users/hauleth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hauleth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 4930795,
        "node_id": "MDU6TGFiZWw0OTMwNzk1",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement",
        "name": "Kind:Enhancement",
        "color": "009800",
        "default": false,
        "description": null
      },
      {
        "id": 17739153,
        "node_id": "MDU6TGFiZWwxNzczOTE1Mw==",
        "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir",
        "name": "App:Elixir",
        "color": "CCCCCC",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/milestones/19",
      "html_url": "https://github.com/elixir-lang/elixir/milestone/19",
      "labels_url": "https://api.github.com/repos/elixir-lang/elixir/milestones/19/labels",
      "id": 1889114,
      "node_id": "MDk6TWlsZXN0b25lMTg4OTExNA==",
      "number": 19,
      "title": "v2.0",
      "description": "",
      "creator": {
        "login": "josevalim",
        "id": 9582,
        "node_id": "MDQ6VXNlcjk1ODI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josevalim",
        "html_url": "https://github.com/josevalim",
        "followers_url": "https://api.github.com/users/josevalim/followers",
        "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
        "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
        "organizations_url": "https://api.github.com/users/josevalim/orgs",
        "repos_url": "https://api.github.com/users/josevalim/repos",
        "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
        "received_events_url": "https://api.github.com/users/josevalim/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 2,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2016-07-18T10:36:08Z",
      "updated_at": "2021-03-30T08:17:50Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 11,
    "created_at": "2018-08-16T20:32:52Z",
    "updated_at": "2023-12-22T18:23:21Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### Environment\r\n\r\n* Elixir & Erlang/OTP versions (elixir --version): 1.7.2\r\n* Operating system: macOS\r\n\r\n### Current behavior\r\n\r\nI wanted to create macro that would allow me to remove boilerplate over generating structures for events in my application. To document such structures I wanted to use `@doc` to simulate feeling that these are normal parts of the external module instead of being separate modules, ex.:\r\n\r\n```elixir\r\ndefmodule MyApp.Event do\r\n  import Events\r\n\r\n  @moduledoc false\r\n\r\n  @doc \"\"\"\r\n  Creation of new submission\r\n  \"\"\"\r\n  @doc deprecated: \"Foo\"\r\n  defevent SubmissionCreated,\r\n    id: any(),\r\n    name: String.t(),\r\n    author: [map()]\r\nend\r\n```\r\n\r\nWhile basic implementation is dumb easy documentation is quite challenging. What I have achieved is:\r\n\r\n```elixir\r\ndefmodule Events do\r\n  @moduledoc false\r\n\r\n  defmacro defevent(module, fields \\\\ []) do\r\n    keys = Keyword.keys(fields)\r\n\r\n    quote do\r\n      docs = Module.get_attribute(__MODULE__, :doc)\r\n      deprecated = case Module.get_attribute(__MODULE__, :deprecated) do\r\n        nil -> []\r\n        value -> [deprecated: value]\r\n      end\r\n\r\n      {set, _} = :elixir_module.data_tables(__MODULE__)\r\n      metadata = case :ets.lookup(set, {:doc, :meta}) do\r\n        [{{:doc, :meta}, metadata, _}] -> deprecated ++ Keyword.new(metadata)\r\n        [] -> deprecated\r\n      end\r\n\r\n      defmodule unquote(module) do\r\n        if docs, do: Module.put_attribute(__MODULE__, :moduledoc, docs)\r\n        if metadata != [], do: @moduledoc metadata\r\n\r\n        @type t :: %__MODULE__{unquote_splicing(fields)}\r\n\r\n        defstruct unquote(keys)\r\n      end\r\n\r\n      :elixir_module.delete_definition_attributes(__ENV__, nil, nil, nil, nil, nil)\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWhich is fairly ok, except of the part where I need manually get data from ETS for documentation metadata. It cannot be mitigated by using `Module.get_attribute/2` as it explicitly requires atom as a second argument while metadata are stored under `{:doc, :meta}`.\r\n\r\n### Expected behavior\r\n\r\nSomehow allow fetching documentation metadata in macros. This would allow macro writers to utilise that metadata in some way like example above.",
    "reactions": {
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/8095/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/8095/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  }
]
